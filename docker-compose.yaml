version: '3.3'

services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3'
    container_name: 'zookeeper'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    container_name: 'kafka'
    expose:
      - 9092
    ports:
      - '9092:9092'
      - '9093:9093'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CREATE_TOPICS=false
    depends_on:
      - zookeeper
  # postgres:
  #   container_name: postgresDB
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: "password"
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ~/PostgreSQLDB:/var/lib/postgresql/data
  #   networks:
  #     - postgres-network
  # api-gateway:
  #   build:
  #     context: ./api-gateway
  #   image: course/api-gateway
  #   restart: always

  # api-course:
  #   build:
  #     context: ./api-course
  #   image: course/api-course
  #   restart: always

  # app-web:
  #   build:
  #     context: ./app-web
  #   image: course/api-web
  #   restart: always

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
